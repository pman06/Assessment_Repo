# grafana.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: grafana
---
# grafana-provisioning.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: grafana
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.monitoring.svc.cluster.local:9090
        isDefault: true
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'app-db'
        orgId: 1
        folder: ''
        type: file
        options:
          path: /var/lib/grafana/dashboards
  grafana-dashboard.json: |
    {
      "id": null,
      "uid": "fastapi-db-dashboard",
      "title": "FastAPI & PostgreSQL",
      "timezone": "browser",
      "panels": [
        {
          "type": "graph",
          "title": "FastAPI - Response Duration",
          "targets": [
            {
              "expr": "rate(http_request_duration_seconds_sum{job=\"fastapi-app\"}[1m])",
              "legendFormat": "Response Duration",
              "interval": ""
            }
          ],
          "datasource": "Prometheus",
          "gridPos": { "x": 0, "y": 0, "w": 12, "h": 8 }
        },
        {
          "type": "graph",
          "title": "FastAPI - Requests Per Second",
          "targets": [
            {
              "expr": "rate(http_requests_total{job=\"fastapi-app\"}[1m])",
              "legendFormat": "RPS",
              "interval": ""
            }
          ],
          "datasource": "Prometheus",
          "gridPos": { "x": 12, "y": 0, "w": 12, "h": 8 }
        },
        {
          "type": "graph",
          "title": "Postgres - Connection Count",
          "targets": [
            {
              "expr": "pg_stat_activity_count",
              "legendFormat": "Connections",
              "interval": ""
            }
          ],
          "datasource": "Prometheus",
          "gridPos": { "x": 0, "y": 8, "w": 24, "h": 8 }
        }
      ],
      "schemaVersion": 36,
      "version": 1
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
labels:
  app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana-oss:10.0.1
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: provisioning
              mountPath: /etc/grafana/provisioning
      volumes:
        - name: grafana-data
          emptyDir: {}
        - name: provisioning
          configMap:
            name: grafana-provisioning
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
