name: CI/CD Pipeline

on:
  push:
    paths:
      - "app/**"
  pull_request:
    paths:
      - "app/**"

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Run tests
        run: |
          if [ -f "tests/test_app.py" ]; then
            pytest tests/
          else
            echo "No tests found."
          fi

  docker:
    name: Build & Push Docker Image
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Git Tag
        id: vars
        run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image with tag
        run: docker build -t pman06/app:${{ env.TAG }} .

      - name: Push Docker image
        run: docker push pman06/app:${{ env.TAG }}

  deploy:
    name: Deploy to Kubernetes
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update image tag in manifest
        run: |
          sed -i "s|image: pman06/production-deployment|image: pman06/app:${{ env.NEW_TAG }}|" ./k8s/deployment.yaml

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy application to Kubernetes
        run: |
          kubectl set image deployment/prod-app production-deployment=pman06/app:${{ env.TAG }} -n app-ns
          kubectl rollout status deployment/prod-app -n app-ns
          - name: Apply updated Kubernetes manifest
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl rollout status deployment/prod-app -n app-ns
